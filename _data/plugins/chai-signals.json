{"_id":"chai-signals","_rev":"3-c682ab71c44216bd8dcffaa9987982f6","name":"chai-signals","description":"Adds chai assertions for the js-signals library.","dist-tags":{"latest":"1.0.2"},"versions":{"1.0.0":{"name":"chai-signals","version":"1.0.0","description":"Adds chai assertions for the js-signals library.","main":"./chai-signals.js","dependencies":{"bower":"^1.4.1","chai":"*","deep-eql":"^0.1.3"},"devDependencies":{"chai-spies":"*","mocha":"*","mocha-phantomjs":"^3.5.3","phantomjs":"^1.9.16"},"scripts":{"test":"mocha-phantomjs ./test.html"},"repository":{"type":"git","url":"https://github.com/StephenDavidson/chai-signals.git"},"keywords":["chai","mocha","js-signals"],"author":{"name":"Stephen Davidson"},"license":"MIT","bugs":{"url":"https://github.com/StephenDavidson/chai-signals/issues"},"homepage":"https://github.com/StephenDavidson/chai-signals","gitHead":"5a05e972bd8750669420b8f7067936d002ce2353","_id":"chai-signals@1.0.0","_shasum":"f1e5602f1c94b67e1ba5ebfef0a9e50f587d0191","_from":"./","_npmVersion":"1.4.28","_npmUser":{"name":"stephendavidson","email":"shdavidson90@gmail.com"},"maintainers":[{"name":"stephendavidson","email":"shdavidson90@gmail.com"}],"dist":{"shasum":"f1e5602f1c94b67e1ba5ebfef0a9e50f587d0191","tarball":"https://registry.npmjs.org/chai-signals/-/chai-signals-1.0.0.tgz"},"directories":{}},"1.0.1":{"name":"chai-signals","version":"1.0.1","description":"Adds chai assertions for the js-signals library.","main":"./chai-signals.js","dependencies":{"bower":"^1.4.1","chai":"*","deep-eql":"^0.1.3"},"devDependencies":{"chai-spies":"*","mocha":"*","mocha-phantomjs":"^3.5.3","phantomjs":"^1.9.16"},"scripts":{"test":"mocha-phantomjs ./test.html"},"repository":{"type":"git","url":"https://github.com/StephenDavidson/chai-signals.git"},"keywords":["chai","mocha","js-signals"],"author":{"name":"Stephen Davidson"},"license":"MIT","bugs":{"url":"https://github.com/StephenDavidson/chai-signals/issues"},"homepage":"https://github.com/StephenDavidson/chai-signals","gitHead":"162a321a93a154abf863de8bf26a6e350a998cdb","_id":"chai-signals@1.0.1","_shasum":"6250001cd690df9a67ba540489bda8806cc77e73","_from":"./","_npmVersion":"1.4.28","_npmUser":{"name":"stephendavidson","email":"shdavidson90@gmail.com"},"maintainers":[{"name":"stephendavidson","email":"shdavidson90@gmail.com"}],"dist":{"shasum":"6250001cd690df9a67ba540489bda8806cc77e73","tarball":"https://registry.npmjs.org/chai-signals/-/chai-signals-1.0.1.tgz"},"directories":{}},"1.0.2":{"name":"chai-signals","version":"1.0.2","description":"Adds chai assertions for the js-signals library.","main":"./chai-signals.js","dependencies":{"bower":"^1.4.1","chai":"*","deep-eql":"^0.1.3"},"devDependencies":{"chai-spies":"*","mocha":"*","mocha-phantomjs":"^3.5.3","phantomjs":"^1.9.16"},"scripts":{"test":"mocha-phantomjs ./test.html"},"repository":{"type":"git","url":"https://github.com/StephenDavidson/chai-signals.git"},"keywords":["chai","chai-plugin","browser","signals","mocha","js-signals"],"author":{"name":"Stephen Davidson"},"license":"MIT","bugs":{"url":"https://github.com/StephenDavidson/chai-signals/issues"},"homepage":"https://github.com/StephenDavidson/chai-signals","gitHead":"87ff1efb5e7cf716f697f8bc228872b16f0d92b2","_id":"chai-signals@1.0.2","_shasum":"3e2fab9a6c87be301b02075aebaa64140cb41a69","_from":"./","_npmVersion":"1.4.28","_npmUser":{"name":"stephendavidson","email":"shdavidson90@gmail.com"},"maintainers":[{"name":"stephendavidson","email":"shdavidson90@gmail.com"}],"dist":{"shasum":"3e2fab9a6c87be301b02075aebaa64140cb41a69","tarball":"https://registry.npmjs.org/chai-signals/-/chai-signals-1.0.2.tgz"},"_npmOperationalInternal":{"host":"packages-5-east.internal.npmjs.com","tmp":"tmp/chai-signals-1.0.2.tgz_1456135281794_0.9983128709718585"},"directories":{}}},"readme":"# chai-signals [![Build Status](https://travis-ci.org/StephenDavidson/chai-signals.svg?branch=master)](https://travis-ci.org/StephenDavidson/chai-signals) [![npm version](https://badge.fury.io/js/chai-signals.svg)](https://badge.fury.io/js/chai-signals)\nAdds [chai](https://github.com/chaijs/chai) assertions for the [js-signals](https://github.com/millermedeiros/js-signals) library.\n\nAdds the following assertions to chai:\n * dispatched()\n * dispatchedWith()\n\nHow to use\n--------------\n### Installation\n\nImportant: The expectations in this package are dependent on signals from [js-signals](https://github.com/millermedeiros/js-signals).\n\n```\nnpm install chai-signals\n```\n\n\n### Create\nFirst define which signals you're interested in.\n\n```js\nvar signal = new signals.Signal();\nvar signalSpy = chai.signals.spyOnSignal(signal);\nvar signalSpies = chai.signals.createSignalSpyObj([signal1, signal2]);\n```\n\n### Filtering signals\nYou can pass a boolean function to specify which dispatches to register.\n\n```js\nvar signal = new signals.Signal();\nvar signalSpy = chai.signals.spyOnSignal(signal).matching(function (dispatchInfo) {\n\treturn dispatchInfo !== null;\n});\nsignal.dispatch();  // ignored\nsignal.dispatch(5); // registered\n```\n\n### Expectations\nAfter defining the spy you can set expectations in your tests.\n\n```js\nexpect(signalSpy).to.have.been.dispatched();        // the spy's signal has been dispatched at least once\nexpect(signalSpy).to.have.been.dispatched(n);       // the spy's signal has been dispatched n times\nexpect(signal).to.have.been.dispatched();           // the signal has been dispatched at least once\nexpect(signal).to.have.been.dispatched(n);          // the signal has been dispatched n times\nexpect(signalSpy).to.not.have.been.dispatched();    // the spy's signal has not been dispatched at all\nexpect(signalSpy).to.not.have.been.dispatched(n);   // the spy's signal has not been dispatched n times\nexpect(signal).to.not.have.been.dispatched();       // the signal has not been dispatched at all\nexpect(signal).to.not.have.been.dispatched(n);      // the signal has not been dispatched at all\n\nexpect(signalSpy).to.have.been.dispatchedWith(n);          // the spy's signal has been dispatched using n\nexpect(signalSpy).to.have.been.dispatchedWith(m, n);       // the spy's signal has been dispatched using (m, n)\nexpect(signalSpy).to.have.been.dispatchedWith(<object>);   // the spy's signal has been dispatched with using object\nexpect(signal).to.have.been.dispatchedWith(n);          // the signal has been dispatched using n\nexpect(signal).to.have.been.dispatchedWith(m, n);       // the signal has been dispatched using (m, n)\nexpect(signal).to.have.been.dispatchedWith(<object>);   // the signal has been dispatched with using object\nexpect(signalSpy).to.not.have.been.dispatchedWith(n);          // the spy's signal has not been dispatched using n\nexpect(signalSpy).to.not.have.been.dispatchedWith(m, n);       // the spy's signal has not been dispatched using (m, n)\nexpect(signalSpy).to.not.have.been.dispatchedWith(<object>);   // the spy's signal has not been dispatched with using object\nexpect(signal).to.not.have.been.dispatchedWith(n);          // the signal has not been dispatched using n\nexpect(signal).to.not.have.been.dispatchedWith(m, n);       // the signal has not been dispatched using (m, n)\nexpect(signal).to.not.have.been.dispatchedWith(<object>);   // the signal has not been dispatched with using object\n```\n\nAMD\n-------------\nIt's possible to use `chai-signals` as an AMD (Asynchronous Module Definition) module.\n\n`chai-signals` depends on JS-Signals, so first define `signals` path:\n\n```js\nrequire.config({\n\tpaths: {\n\t\tsignals: 'components/js-signals/signals',\n\t\tchai-signals: 'components/chai-signals/lib/chai-signals'\n\t}\n});\n```\n\nThen use it in `Chai` tests like this:\n\n```js\ndefine(['myClass', 'chaiSignals'], function(myClass, chaiSignals) {\n\tit('should signal completed', function () {\n\t\tchai.signals.spyOnSignal(myClass.completed);\n\n\t\tmyClass.doSomething();\n\n\t\texpect(myClass.completed).to.have.been.dispatched();\n\t});\n});\n```\n\nIf you are using karma to run tests make sure to include `chai.use(chaiSignals);` in each of your test files.\n\nExamples\n--------\nSee tests for usage:\n\n[chai-signals.test.js](https://github.com/StephenDavidson/chai-signals/blob/master/chai-signals.test.js)\n\nDevelopment\n-----------\nInstall node.js, [bower](http://twitter.github.com/bower).\n\n```js\nnpm install\nbower install\nnpm test\n```\n\nLicense\n-------\nThis code is distributed under the MIT license.\n\nCredit\n-------\nThis plugin is based off of Adam Nowotny's [jasmine-signals](https://github.com/AdamNowotny/jasmine-signals/blob/master/jasmine-signals.js).\n","maintainers":[{"name":"stephendavidson","email":"shdavidson90@gmail.com"}],"time":{"modified":"2016-02-22T10:01:25.076Z","created":"2015-04-29T20:37:11.098Z","1.0.0":"2015-04-29T20:37:11.098Z","1.0.1":"2015-04-29T20:41:24.739Z","1.0.2":"2016-02-22T10:01:25.076Z"},"homepage":"https://github.com/StephenDavidson/chai-signals","keywords":["chai","chai-plugin","browser","signals","mocha","js-signals"],"repository":{"type":"git","url":"https://github.com/StephenDavidson/chai-signals.git"},"author":{"name":"Stephen Davidson"},"bugs":{"url":"https://github.com/StephenDavidson/chai-signals/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{}}